/*
According to Manual,
Port 1 is for pd->comp, comp->pd: pads do noteOn/off, noteNum, velocity.
Port 2 is for pd>comp, buttons (shift, curveSetup, 4velmode, browse)
and rot knob; browse can be sent back
Port 3 is apparently unused (i.e. reserved for company-only uses).

pads and 4velmode also send sysex on port 2;
4velmode button toggles light, but sends noteOn/off on touch/release.
(state liekly sent in sysex.

--- velocity value is always 16!
--- 4velmode is same note on buts 1,5,9,13 etc; vel 31, 63, 95, 127.

- shift button is used to switch between note combinations on the pads:
- shift1, pads 1-16:
1: [35, 36, 38, 40,   39,44,42,46,   41,45,47,48,  51,55,49,56],
2: (4..19),
3: (20..35),
4: (36..51),
5: (52..67),
6: (68..83),
7: (84..99),
8: (100..115),
// 9: (4..19), // 9-15 is the same as 2-8
// 10: (20..35),
// 11: (36..51),
// 12: (52..67),
// 13: (68..83),
// 14: (84..99),
// 15: (100..115),
// 16: all sysex messages // no idea what they are for

*/
(
parentDesc: "steinberg-cmc-pd",

status: (
	linux: "unknown",
	osx: "tested and working, minus out and sysex",
	win: "unknown"),

idInfo: (deviceName: "Steinberg CMC-PD", sourcePortIndex: 0, destPortIndex: 0),

// by default, all pads have vel of 16
// in 4vel mode, they are 0, 31, 63, 95, 127,
// and fewer buttons...
specs: (vel16: [0, 16, \lin, 16])

deviceInfo: (
	vendorURI: "http://www.steinberg.net/en/products/controllers/cmc_series/models/cmc_pd.html",
	// manualURI: "",
	// description: "",
	// features: "",
	// notes: "",
),
elementsDesc: (
	shared: ('midiMsgType': 'noteOnOff', 'elementType': 'pad',
		'midiChan': 0, 'spec': 'midiVel')
	elements: [
		(key: 'pad',
			elements: [
				\1: [35, 36, 38, 40,   39,44,42,46,   41,45,47,48,  51,55,49,56]
					.collect { |num| ('midiNum': num) },
				\2: (4..19)   .collect { |num| ('midiNum': num) },
				\3: (20..35)  .collect { |num| ('midiNum': num) },
				\4: (36..51)  .collect { |num| ('midiNum': num) },
				\5: (52..67)  .collect { |num| ('midiNum': num) },
				\6: (68..83)  .collect { |num| ('midiNum': num) },
				\7: (84..99)  .collect { |num| ('midiNum': num) },
				\8: (100..115).collect { |num| ('midiNum': num) }
			]
		)
	]
)
);