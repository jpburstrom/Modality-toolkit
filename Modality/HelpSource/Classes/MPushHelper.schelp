TITLE::MPushHelper
SUMMARY::Helper methods to interface with the Ableton Push
CATEGORIES::Libraries/Modality
RELATED::Classes/MKtl

DESCRIPTION::
Providing help for accessing/communicating with an Ableton Push. Currently implements an interface to conveniently set colors.

CLASSMETHODS::

METHOD:: buttonLightCode
returns a cc-number representing the color specified by given arguments.

argument:: intensity
can be either code::\dim::, code::\full:: or code::\half:: (2nd row only)

argument:: blink
can be either code::\steady::, code::\slow:: or code::\fast:: (not yet implemented for 2nd row)

argument:: color
A Symbol representing the color.

code::
MPushHelper.lightDict.topRowColor.keys; // 1st row
MPushHelper.lightDict.padColor.keys; // 2nd row
::

argument:: row
either code::0:: or code::1::.




METHOD:: padLightCode
returns a velocity representing the color specified by the given arguments.

argument:: intensity
can be either code::\dim::, code::\full:: or code::\half::

argument:: blink
can be either code::\steady::, code::\slow:: or code::\fast:: (not yet implemented)

argument:: color
A Symbol representing the color.

code::
MPushHelper.lightDict.padColor.keys;
::

argument:: row
The row of the pads




code::
(
2.do{|i|
	MKtl('bltn1').elementAt(\colorBut, i).flat.do{|el| el.rawValue_(MPushHelper.buttonLightCode(intensity: \full, color: \red, row: i)).prMaybeSend;};
};
8.do{|i|
	MKtl('bltn1').elementAt(\pad, \on, i).flat.do{|el| el.rawValue_(MPushHelper.padLightCode(intensity: \full, color: 60)).prMaybeSend;};
}
)
::


